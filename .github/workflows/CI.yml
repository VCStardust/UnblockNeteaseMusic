name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
  def:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
             curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
             dep ensure
          fi
      - name: build
        run: |
          CurrentVersion=${{ github.ref }}
          CurrentVersion=${CurrentVersion/'refs/tags/'/''}
          Project=github.com/cnsilvan/UnblockNeteaseMusic
          Path="$Project/version"
          ExecName="UnblockNeteaseMusic"
          GitCommit=$(git rev-parse --short HEAD || echo unsupported)
          GoVersion=$(go version)
          BuildTime=$(TZ=UTC-8 date "+%Y-%m-%d %H:%M:%S")
          platforms=("windows/amd64" "darwin/amd64" "darwin/arm64" "linux/amd64" "linux/arm5" "linux/arm"  "linux/arm7" "linux/arm64" "linux/mipsle" "linux/mips" "linux/mipsle-softfloat" "linux/mips-softfloat" "linux/386")
          buildGo() {
           GOOS=$1
           GOARCH=$2
           CGO="CGO_ENABLED=0"
           GOARM=""
           GOMIPS=""
           output_name=$ExecName
           suffix=""
           TargetDir=bin/$GOOS/$GOARCH
           if [ $GOOS = "windows" ]; then
             output_name+='.exe'
           fi
           if [ $GOOS = "ios" ]; then
             CGO="CGO_ENABLED=1 CC=$(go env GOROOT)/misc/ios/clangwrap.sh"
           fi
           if [ $GOARCH = "arm5" ]; then
               GOARCH="arm"
               GOARM="GOARM=5"
               suffix="5"
           elif [ $GOARCH = "arm64" ]; then
               GOARCH="arm64"
               GOARM=""
               suffix=""
           elif [ $GOARCH = "arm7" ]; then
               GOARCH="arm"
               GOARM="GOARM=7"
               suffix="7"
           fi
           if [ $GOARCH = "mipsle-softfloat" ]; then
               GOARCH="mipsle"
               GOMIPS="GOMIPS=softfloat"
               suffix="-softfloat"
           elif [ $GOARCH = "mips-softfloat" ]; then
               GOARCH="mips"
               GOMIPS="GOMIPS=softfloat"
               suffix="-softfloat"
           fi
           echo "Building($GOOS/$GOARCH$suffix)..."
           echo $GOMIPS $GOARM
           env $GOARM $GOMIPS GOOS=$GOOS GOARCH=$GOARCH $CGO env GOPROXY=https://goproxy.io go build -ldflags "-X '$Path.Version=$CurrentVersion' -X '$Path.BuildTime=$BuildTime' -X '$Path.GoVersion=$GoVersion' -X '$Path.GitCommit=$GitCommit' -X '$Path.ExGoVersionInfo=$suffix' -w -s" -o $TargetDir/$output_name
           if [ $? -ne 0 ]; then
              echo 'An error has occurred! Aborting the script execution...'
              exit 1
           fi
           cp -rf key/ca.crt $TargetDir/
           cp -rf key/server.key $TargetDir/
           cp -rf key/server.crt $TargetDir/
           cp -rf key/createCertificate.sh $TargetDir/
           ZipName=$ExecName"-"$GOOS"-"$GOARCH"$suffix"
           zip -j -q -r  $TargetDir/$ZipName.zip $TargetDir
           cp $TargetDir/$ZipName.zip bin/releaseUpload/
          }
          rm -rf bin/
          mkdir -p bin/releaseUpload
          mkdir -p key
          cp ./createCertificate.sh key
          cd key
          ./createCertificate.sh
          cd ..
          for platform in "${platforms[@]}"; do
           platform_split=(${platform//\// })
           buildGo ${platform_split[0]} ${platform_split[1]}
          done
          echo "--------------------------------------------"
          echo "Version:" $CurrentVersion
          echo "Git commit:" $GitCommit
          echo "Go version:" $GoVersion
          echo "Build Time:" $BuildTime
          echo "Build Finish"
          echo "--------------------------------------------"
      - name: Upload Build Artifact (darwin-amd64)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-darwin-amd64
          path: bin/releaseUpload/UnblockNeteaseMusic-darwin-amd64.zip

      - name: Upload Build Artifact (darwin-arm64)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-darwin-arm64
          path: bin/releaseUpload/UnblockNeteaseMusic-darwin-arm64.zip

      - name: Upload Build Artifact (linux-386)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-386
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-386.zip

      - name: Upload Build Artifact (linux-amd64)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-amd64
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-amd64.zip

      - name: Upload Build Artifact (linux-arm)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-arm
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-arm.zip

      - name: Upload Build Artifact (linux-arm5)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-arm5
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-arm5.zip

      - name: Upload Build Artifact (linux-arm7)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-arm7
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-arm7.zip

      - name: Upload Build Artifact (linux-arm64)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-arm64
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-arm64.zip

      - name: Upload Build Artifact (linux-mips-softfloat)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-mips-softfloat
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-mips-softfloat.zip

      - name: Upload Build Artifact (linux-mips)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-mips
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-mips.zip

      - name: Upload Build Artifact (linux-mipsle-softfloat)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-mipsle-softfloat
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-mipsle-softfloat.zip

      - name: Upload Build Artifact (linux-mipsle)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-linux-mipsle
          path: bin/releaseUpload/UnblockNeteaseMusic-linux-mipsle.zip

      - name: Upload Build Artifact (windows-amd64)
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: UnblockNeteaseMusic-windows-amd64
          path: bin/releaseUpload/UnblockNeteaseMusic-windows-amd64.zip
